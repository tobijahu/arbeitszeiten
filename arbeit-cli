#!/bin/python3
# -*- coding: utf-8 -*-

try:
	from libarbeitszeiten import *
except ImportError:
	print('Could not import module libarbeitszeiten. Check, if libarbeitszeiten.py is available in this dir.')

import sys


def print_help():
    print("Usage: " + sys.argv[0] + " -e -t 12:00 15:00 15:30")
    print("  -h, --help     diese Hilfe anzeigen und beenden")
    print("      --version  Versionsinformation anzeigen und beenden")
    print("  -e             Startzeit nicht gegeben")
    print("  -t             ")
    print("  -t=5           Gesamte Arbeitszeit des Tages in Minuten")
    sys.exit(0)


def option_tagesarbeitsminuten(arg, tagesarbeitsminuten):
    if not arg.split("=")[0] == '-t':
        return None
    if len(arg.split("=")) > 1:
        if arg.split("=")[1] == '':
            raise ValueError
        tagesarbeitsminuten = arg.split("=")[1]
    return tagesarbeitsminuten


def option_ende_gegeben(arg):
    if arg.split("=")[0] == '-e':
        return True
    return False


def option_help(arg):
    if arg.split("=")[0] == '-h' or arg.split("=")[0] == '--help':
        return True
    return False


def args_auswerten(*args):
    tagesarbeitsminuten = None
    start_gegeben = True
    wert_liste = list(args)
    for arg in args:
        tagesarbeitsminuten_kandidat = option_tagesarbeitsminuten(arg, TAGESARBEITSMINUTEN)
        if not tagesarbeitsminuten_kandidat is None:
            tagesarbeitsminuten = tagesarbeitsminuten_kandidat
            wert_liste.remove(arg)
            continue
        elif option_ende_gegeben(arg):
            start_gegeben = False
            wert_liste.remove(arg)
            continue
        elif option_help(arg):
            print_help()
        else:
            return(tagesarbeitsminuten, start_gegeben, wert_liste)

#def resultat_wrappen(*args):
#    r:w



if __name__ == "__main__":
    if len(sys.argv) < 1:
        raise SyntaxError("Zu wenig Argumente.")
    else:
        # If there are no keyword arguments
        tam = TAGESARBEITSMINUTEN
        uebergabe = args_auswerten(*sys.argv[1:])
        print(uebergabe)
        if not uebergabe:
            print_help()
        if len(uebergabe) <= 2:
            print("Keine Werte Ã¼bergeben.")
#            raise SyntaxError("Keine Werte Ã¼bergeben.")


        if uebergabe[0]:
            tam = uebergabe[0]

        if uebergabe[1] == False:
#            resultat = auswerten(uebergabe[2], uebergabe[0], False)
            resultat = auswerten(uebergabe[2], tam, False)
        else:
#            resultat = auswerten(uebergabe[2], uebergabe[0])
            resultat = auswerten(uebergabe[2], tam)

        print(resultat)

        if resultat[0]:
            print('Arbeitszeit: %s' % zeitpunkt_zu_zeitstring(minuten_zu_zeitpunkt(resultat[0])))
            tam = resultat[0]
        if resultat[1]:
            print('Startzeit: %s' % zeitpunkt_zu_zeitstring(minuten_zu_zeitpunkt(resultat[1])))
        if resultat[2]:
            print('Endzeit: %s' % zeitpunkt_zu_zeitstring(minuten_zu_zeitpunkt(resultat[2])))
        if resultat[3]:
            print('Pausenzeit: %s' % zeitpunkt_zu_zeitstring(minuten_zu_zeitpunkt(resultat[3])))
            if not pausengesetz_vereinfacht(tam, resultat[3]):
                print('Arbeits- und/oder Pausenzeit nicht gesetzesconform')

