#!/bin/python3
# -*- coding: utf-8 -*-

try:
	from libarbeitszeiten import *
except ImportError:
	print('Could not import module libarbeitszeiten. Check, if libarbeitszeiten.py is available in this dir.')

import sys


def args_auswerten(*args):
    tagesarbeitsminuten = None
    start_gegeben = None
    i = 1
    for arg in args:
        if arg.split("=")[0] == '-t':
            try:
                arg.split("=")[1]
            except:
                raise SyntaxError
            if arg.split("=")[1] != '':
                tagesarbeitsminuten = arg.split("=")[1]
                i += 1
            else:
                raise ValueError
        elif arg.split("=")[0] == '-e':
            start_gegeben = False
            i += 1
        elif len(sys.argv) >= 1:
            return(tagesarbeitsminuten, start_gegeben, sys.argv[i:])
        else:
            raise SyntaxError


if __name__ == "__main__":
    if len(sys.argv) < 1:
        raise SyntaxError("Zu wenig Argumente.")
    else:
        # If there are no keyword arguments
        uebergabe = args_auswerten(*sys.argv)
        tam = uebergabe[0]
        start = uebergabe[1]

        if tam is None:
            tam = TAGESARBEITSMINUTEN

        if start is not None:
            resultat = auswerten(uebergabe[2], tam, start)
        else:
            resultat = auswerten(uebergabe[2], tam)

#        print(resultat)

        if resultat[0]:
            print('Arbeitszeit: %s' % zeitpunkt_zu_zeitstring(minuten_zu_zeitpunkt(resultat[0])))
            tam = resultat[0]
        if resultat[1]:
            print('Startzeit: %s' % zeitpunkt_zu_zeitstring(minuten_zu_zeitpunkt(resultat[1])))
        if resultat[2]:
            print('Endzeit: %s' % zeitpunkt_zu_zeitstring(minuten_zu_zeitpunkt(resultat[2])))
        if resultat[3]:
            print('Pausenzeit: %s' % zeitpunkt_zu_zeitstring(minuten_zu_zeitpunkt(resultat[3])))
            if not pausengesetz_vereinfacht(tam, resultat[3]):
                print('Arbeits- und/oder Pausenzeit nicht gesetzesconform')

